[PROCESS_TABLE +([SYSTEM_STATUS_TABLE+1]*16)+9]=7;

alias userSP R0;
alias currPID R1;
alias curr_process_table R2;
alias physicalPageNum R3;
alias offset R4;
alias fileDescriptor R5;
alias wordStoreAddress R6;


userSP=SP;

currPID=[SYSTEM_STATUS_TABLE+1];
curr_process_table=PROCESS_TABLE+currPID*16;

[PROCESS_TABLE +([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;
SP=[PROCESS_TABLE +([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;

physicalPageNum = [PTBR + 2*(userSP - 4)/512];
offset = (userSP - 4)%512;


fileDescriptor = [physicalPageNum*512 + offset];


if(fileDescriptor != -1) then
	[[PTBR + 2*(userSP - 1)/512]*512 + ((userSP - 1)%512)] = -1;	// STORE -1 AS RETURN VALUE

else
	physicalPageNum = [PTBR + 2*((userSP - 3)/512)];
	offset = (userSP - 3)%512;
	wordStoreAddress = [physicalPageNum*512 + offset];

	multipush (R0, R1, R2, R3, R4, R5, R6);

	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = wordStoreAddress;

	call MOD_4;		//calling DEVICE_MANAGER_MODULE

	multipop  (R0, R1, R2, R3, R4, R5, R6);

	[[PTBR + 2*((userSP-1)/512)]*512 + ((userSP-1)%512)] = 0;

endif;


[curr_process_table + 9] = 0;
SP = [curr_process_table + 13];

ireturn;



loadi(4,17);
loadi(5,18);      //timer
loadi(65,7);
loadi(66,8);      //init
loadi(63,13);
loadi(64,14);     //lib
loadi(22,35);
loadi(23,36);     //int10
loadi(2,15);
loadi(3,16);      //exc
loadi(16,29);
loadi(17,30);     //int7
loadi(69,11);
loadi(70,12);     //idle
loadi(85,69);     //exec

loadi(50,63);
loadi(51,64);	// ISR (MODULE 5)


loadi(40,53);
loadi(41,54);

loadi(48,61);
loadi(49,62);

//loading interrupt handler from disk to memory
loadi(8,21);
loadi(9,22);

//loading int 6 from disk to memory
loadi(14,27);
loadi(15,28);

PTBR=PAGE_TABLE_BASE+20;
PTLR=10;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE+17]=1;
[PROCESS_TABLE+29]=8*512;
[PROCESS_TABLE+28]=0;
[PROCESS_TABLE+30]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+31]=10;
[PROCESS_TABLE+27]=80;
[PROCESS_TABLE+20]=CREATED;
[76*512]=[65*512+1];


[PROCESS_TABLE +16*2+4]=TERMINATED;
[PROCESS_TABLE +16*3+4]=TERMINATED;
[PROCESS_TABLE +16*4+4]=TERMINATED;
[PROCESS_TABLE +16*5+4]=TERMINATED;
[PROCESS_TABLE +16*6+4]=TERMINATED;
[PROCESS_TABLE +16*7+4]=TERMINATED;
[PROCESS_TABLE +16*8+4]=TERMINATED;
[PROCESS_TABLE +16*9+4]=TERMINATED;
[PROCESS_TABLE +16*10+4]=TERMINATED;
[PROCESS_TABLE +16*11+4]=TERMINATED;
[PROCESS_TABLE +16*12+4]=TERMINATED;
[PROCESS_TABLE +16*13+4]=TERMINATED;
[PROCESS_TABLE +16*14+4]=TERMINATED;
[PROCESS_TABLE +16*15+4]=TERMINATED;

return;
